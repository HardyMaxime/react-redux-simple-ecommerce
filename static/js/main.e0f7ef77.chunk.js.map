{"version":3,"sources":["store/reducers/productsReducer.js","store/reducers/filtersReducer.js","store/reducers/cartReducer.js","store/actions/productsAction.js","store/actions/cartAction.js","components/ProductCard/ProductCard.js","containers/ProductsList/ProductsList.js","components/MenuCategories/MenuCategories.js","containers/Sidebar/Sidebar.js","store/actions/filtersAction.js","hoc/Layout.js","components/Spinner/Spinner.js","components/Modal/Modal.js","containers/Select/Select.js","containers/Cart/Cart.js","components/Navbar/Navbar.js","components/Breadcrumb/Breadcrumb.js","components/ProductDescription/ProductDescription.js","containers/ReplyComments/ReplyComments.js","containers/ProductPage/ProductPage.js","App.js","index.js"],"names":["initialState","products","error","loading","reducer","state","arguments","length","undefined","action","findProductIncart","id","find","product","updateProductById","currentQuantityProduct","map","Object","objectSpread","quantity","type","data","updateProductAddQuantites","updateProductRemoveQuantities","idForUpdate","comments","concat","payload","currentProductRating","updateProductRating","rating","filterString","categorieFilter","maxPrice","value","inCart","quantities","price","quantityWanted","totalPrice","item","filter","isRender","updateQuantity","update","dispatch","addProductQuantity","removeProductQuantity","updateProductAlreadyInCart","productInCart","productCard","props","react_default","a","createElement","Card","Content","Image","src","path","Header","Link","to","name","Meta","Rating","defaultRating","maxRating","disabled","Description","category","extra","ProductsList","_this2","this","react","Group","toLowerCase","includes","ProductCard","key","PureComponent","connect","prod","menuCategories","Menu","pointing","vertical","Item","as","Icon","onClick","onChangeCategoryHandler","allCategories","index","charAt","toUpperCase","substr","Sidebar","_this","categories","parseInt","array","i","j","len","out","obj","push","Input","icon","placeholder","onKeyUp","e","onTextChange","target","Form","label","min","max","onChange","onChangeFilterPrice","step","MenuCategories","onChangeCategory","Layout","Grid","container","stackable","columns","Row","centered","Column","mobile","tablet","computer","containers_Sidebar_Sidebar","containers_ProductsList_ProductsList","Component","spinner","className","modal","Modal","trigger","Button","animated","color","hidden","visible","header","content","title","children","actions","positive","Select","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","setState","selectQuantities","onUpdateProductAlreadyInCart","productId","computedPrice","currentProduct","onUpdateQuantity","quantitiesWanted","result","bind","assertThisInitialized","currProduct","elem","Cart","onDeleteProduct","Table","celled","padded","HeaderCell","textAlign","Body","Cell","containers_Select_Select","negative","updateCart","cart","deleteProductInCart","navbar","size","inverted","position","Modal_Modal","containers_Cart_Cart","breadcrumb","Breadcrumb","Section","Divider","active","productName","productDescription","productRating","Message","ReplyComments","message","handleRate","_ref","handleSubmit","onAddReplyMessage","moment","fromNow","onRatingProduct","Comment","dividing","comment","Author","author","commentRatingProduct","Metadata","date","Text","onRate","reply","onSubmit","TextArea","labelPosition","primary","Date","addReplyMessage","ratingProduct","ProductPage","defineProperty","handleClick","selectQuantity","productAlreadyInCart","addToCart","Segment","style","width","Breadcrumb_Breadcrumb","ProductDescription","warning","basic","containers_ReplyComments_ReplyComments","App","fetchData","isLoading","Spinner_Spinner","Navbar","Switch","Route","render","match","params","el","containers_ProductPage_ProductPage","Redirect","exact","component","withRouter","axios","get","then","res","catch","err","initData","combineAllReducers","combineReducers","ProductsReducer","FiltersReducer","CartReducer","store","createStore","applyMiddleware","thunk","root","es","BrowserRouter","src_App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e0f7ef77.chunk.js","sourcesContent":["const initialState = {\r\n   products: [],\r\n   error: null,\r\n   loading: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  let findProductIncart = id => state.products.find(product => product.id === id)\r\n  let updateProductById = (currentQuantityProduct) => (\r\n    state.products.map(\r\n        product => product.id === action.id ? { ...product, quantity: currentQuantityProduct } : product)\r\n  )\r\n\r\n    switch (action.type) {\r\n      case 'FETCH_DATA_BEGIN' :\r\n         return {\r\n            ...state,\r\n            loading: true\r\n         }\r\n       case 'FETCH_DATA_SUCCESS' :\r\n          return {\r\n             ...state,\r\n             loading: false,\r\n             error: null,\r\n             products: action.data\r\n          }\r\n       case 'FETCH_DATA_FAILED' :\r\n          return {\r\n             ...state,\r\n             loading: false,\r\n             error: action.error\r\n          }\r\n          /* eslint-disable */\r\n       case 'ADD_PRODUCT_QUANTITY' :\r\n          const currentProductForAddQuantities = findProductIncart(action.id)\r\n          let updateProductAddQuantites = currentProductForAddQuantities.quantity - action.quantity;\r\n          if (updateProductAddQuantites <= 0) {\r\n            updateProductAddQuantites = 0;\r\n          }\r\n          return {\r\n             ...state,\r\n              products:  updateProductById(updateProductAddQuantites)\r\n          }\r\n       case 'REMOVE_PRODUCT_QUANTITY' :\r\n          const currentProductForRemoveQuantities = findProductIncart(action.id);\r\n          let updateProductRemoveQuantities = currentProductForRemoveQuantities.quantity + action.quantity;\r\n          return {\r\n             ...state,\r\n             products: updateProductById(updateProductRemoveQuantities)\r\n          }\r\n          case 'ADD_REPLY_MESSAGE' :\r\n          return { \r\n              ...state, \r\n              products: state.products.map(\r\n                  product => product.id === action.idForUpdate ? {...product, comments : product.comments.concat(action.payload)  } : product)\r\n          }\r\n          case 'RATING_PRODUCT' :\r\n          const currentProductRating = findProductIncart(action.id);\r\n          let updateProductRating = (((currentProductRating.comments.length - 1) * currentProductRating.rating) + action.rating) / currentProductRating.comments.length\r\n          return { \r\n              ...state, \r\n              products: state.products.map(\r\n                  product => product.id === action.id ? {...product, rating : updateProductRating } : product)\r\n          }\r\n\r\n        default: return state\r\n         }\r\n}\r\n\r\nexport default reducer","const initialState = {\r\n  filterString: '',\r\n  categorieFilter: '',\r\n  maxPrice: 999\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n       case 'ON_TEXT_CHANGE' :\r\n          return {\r\n             ...state,\r\n             filterString: action.value\r\n          }\r\n       case 'ON_CHANGE_CATEGORY' :\r\n          return {\r\n             ...state,\r\n             categorieFilter: action.value\r\n          }\r\n       case 'ON_CHANGE_FILTER_PRICE' :\r\n          return {\r\n             ...state,\r\n             maxPrice: action.value\r\n          }\r\n        default: return state\r\n   }\r\n}\r\n\r\nexport default reducer\r\n","const initialState = {\r\n  inCart: []\r\n}\r\n/* eslint-disable */\r\nconst reducer = (state = initialState, action) => {\r\n  let updateProductById = (id,quantities, price) => (\r\n    state.inCart.map(\r\n        item => item.id === id ? {...item, quantityWanted : quantities, totalPrice: price  } : item)\r\n  )\r\n    switch (action.type) {\r\n       case \"ADD_TO_CART\" :\r\n          return {\r\n             ...state,\r\n            inCart : state.inCart.concat(action.value)\r\n          }\r\n       case \"UPDATE_PRODUCT_ALREADY_IN_CART\" :\r\n          return {\r\n             ...state,\r\n            inCart : updateProductById(action.value.id, action.value.quantityWanted, action.value.totalPrice)\r\n          }\r\n       case \"DELETE_PRODUCT_IN_CART\" :\r\n          return {\r\n             ...state,\r\n            inCart : state.inCart.filter(product => product.id !== action.id)\r\n          }\r\n\r\n        default: return state\r\n         }\r\n}\r\n\r\nexport default reducer","import axios from 'axios'\r\n\r\nexport const fetchDataBegin = () => (\r\n    {\r\n        type: 'FETCH_DATA_BEGIN'\r\n    }\r\n)\r\n\r\nexport const fetchDataSuccess = data => (\r\n    {\r\n        type: 'FETCH_DATA_SUCCESS',\r\n        data\r\n    }\r\n)\r\n\r\nexport const fetchDataFailed = error => (\r\n    {\r\n        type: 'FETCH_DATA_FAILED',\r\n        error\r\n    }\r\n)\r\n\r\nlet isRender = false\r\nexport const initData = () => {\r\n    if (!isRender) {\r\n        isRender = true\r\n        return dispatch => {\r\n            dispatch(fetchDataBegin())\r\n            return axios\r\n              .get('data/fakeServerData.json')\r\n              .then(res => dispatch(fetchDataSuccess(res.data.products)))\r\n              .catch(err => dispatch(fetchDataFailed(err)))\r\n            }\r\n        }\r\n  /* eslint-disable no-unused-expressions */\r\n   dispatch => {}\r\n}\r\n\r\nexport const addProductQuantity = (id, quantity) => ({\r\n  type: 'ADD_PRODUCT_QUANTITY',\r\n  id,\r\n  quantity\r\n})\r\n\r\nexport const removeProductQuantity = (id, quantity) => ({\r\n  type: 'REMOVE_PRODUCT_QUANTITY',\r\n  id,\r\n  quantity\r\n})\r\n\r\nexport const updateQuantity = (id, update, quantity) => dispatch => {\r\n  if (update === 'add') {\r\n    dispatch(addProductQuantity(id, quantity))\r\n  } else if (update === 'remove') {\r\n    dispatch(removeProductQuantity(id, quantity))\r\n  }\r\n}\r\n\r\nexport const addReplyMessage = (id, date, message, rating) => ({\r\n  type: 'ADD_REPLY_MESSAGE',\r\n  idForUpdate: id,\r\n  payload: {\r\n    id: new Date(),\r\n    author: 'You',\r\n    date,\r\n    message,\r\n    commentRatingProduct: rating\r\n  }\r\n})\r\n\r\nexport const ratingProduct = (id, rating) => ({\r\n  type: 'RATING_PRODUCT',\r\n  id,\r\n  rating\r\n})\r\n","export const addToCart = productInCart => ({\r\n  type: 'ADD_TO_CART',\r\n  value: productInCart\r\n})\r\n\r\nexport const updateProductAlreadyInCart = productInCart => ({\r\n  type: 'UPDATE_PRODUCT_ALREADY_IN_CART',\r\n  value: productInCart\r\n})\r\n\r\nexport const deleteProductInCart = id => ({\r\n  type: 'DELETE_PRODUCT_IN_CART',\r\n  id\r\n})\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Image, Rating } from 'semantic-ui-react'\r\nimport PropTypes from 'prop-types'\r\n\r\n /* eslint-disable no-nested-ternary */\r\nconst productCard = props => (\r\n  <Card>\r\n    <Card.Content>\r\n      <Image src={props.product.path} />\r\n      <Card.Content>\r\n        <Card.Header>\r\n          <Link to={`/produit/${props.product.id}`}>\r\n            <h1>{props.product.name}</h1>\r\n          </Link>\r\n        </Card.Header>\r\n      </Card.Content>\r\n      <Card.Meta>{props.product.price} €</Card.Meta>\r\n      <Rating defaultRating={props.product.rating} maxRating={5} disabled />\r\n      <Card.Description>\r\n        <b>{props.product.category} : </b>\r\n        <br />\r\n        Description du produit\r\n        <Card.Content extra>\r\n          {props.product.quantity === 1\r\n            ? '1 exemplaire disponible'\r\n            : props.product.quantity !== 0\r\n              ? `en stock (${props.product.quantity} exemplaires restants)`\r\n              : 'Hors stock'}\r\n        </Card.Content>\r\n      </Card.Description>\r\n    </Card.Content>\r\n  </Card>\r\n)\r\n\r\nproductCard.propTypes = {\r\n  product: PropTypes.instanceOf(Object).isRequired\r\n}\r\n\r\nexport default productCard\r\n","import React, { PureComponent, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Card } from 'semantic-ui-react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport ProductCard from './../../components/ProductCard/ProductCard'\r\n\r\nclass ProductsList extends PureComponent {\r\n     state = {}\r\n     render () {\r\n         return (\r\n            <Fragment>\r\n                <Card.Group>\r\n                    {this.props.products\r\n                    .filter(item => item.name.toLowerCase()\r\n                        .includes(this.props.filterString.toLowerCase()))\r\n                    .filter(item => item.category.toLowerCase()\r\n                        .includes(this.props.categorieFilter))\r\n                    .filter(item => item.price <= this.props.maxPrice)\r\n                    .map(product => (\r\n                        <ProductCard key={product.id} product={product} />\r\n                    ))}\r\n                </Card.Group>\r\n            </Fragment>\r\n        )\r\n    }\r\n};\r\n\r\nProductsList.propTypes = {\r\n  products: PropTypes.instanceOf(Array).isRequired,\r\n  filterString: PropTypes.string.isRequired,\r\n  categorieFilter: PropTypes.string.isRequired,\r\n  maxPrice: PropTypes.number.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.prod.products,\r\n  filterString: state.filter.filterString,\r\n  categorieFilter: state.filter.categorieFilter,\r\n  maxPrice: state.filter.maxPrice\r\n})\r\n\r\nexport default connect(mapStateToProps)(ProductsList)\r\n","import React from 'react'\r\nimport { Menu, Header, Icon } from 'semantic-ui-react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst menuCategories = props => (\r\n  <Menu pointing vertical>\r\n    <Menu.Item>\r\n      <Header as=\"h3\">\r\n        <Icon name=\"list layout\" />\r\n        <Header.Content>Categories</Header.Content>\r\n      </Header>\r\n    </Menu.Item>\r\n    <Menu.Item onClick={() => props.onChangeCategoryHandler('')}>Afficher tout</Menu.Item>\r\n    {props.allCategories.map((item, index) => (\r\n      <Menu.Item key={index} onClick={() => props.onChangeCategoryHandler(item.toLowerCase())}>\r\n        {item.charAt(0).toUpperCase() +\r\n          item.substr(1).toLowerCase()}\r\n      </Menu.Item>\r\n    ))}\r\n  </Menu>\r\n)\r\n\r\nmenuCategories.propTypes = {\r\n  allCategories: PropTypes.instanceOf(Array).isRequired,\r\n  onChangeCategoryHandler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default menuCategories\r\n","import React, { PureComponent, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { Input, Form } from 'semantic-ui-react'\r\n\r\nimport { onTextChange, onChangeCategory, onChangeFilterPrice } from './../../store/actions/index'\r\n\r\nimport MenuCategories from './../../components/MenuCategories/MenuCategories'\r\n\r\nclass Sidebar extends PureComponent {\r\n    render () {\r\n        let categories = this.props.products.map(item => item.category)\r\n        const maxPrice = parseInt(this.props.maxPrice, 10)\r\n        /* eslint-disable */\r\n        const allCategories = array => {\r\n            let i, j, len = array.length, \r\n            out = [], obj = {};\r\n\r\n            for (i = 0; i < len; i++) {\r\n                obj[array[i]] = 0;\r\n            }\r\n            for (j in obj) {\r\n                out.push(j);\r\n            }\r\n            return out;\r\n        }\r\n        /* eslint-enabled */\r\n        categories = allCategories(categories)\r\n        return <Fragment>\r\n            <Input icon=\"search\" placeholder=\"Search...\" onKeyUp={e => this.props.onTextChange(e.target.value)} />\r\n            <Form>\r\n              <Form.Input label={`Prix max : ${maxPrice}€ `} min={0} max={999} name=\"rangePrice\" onChange={e => this.props.onChangeFilterPrice(parseInt(e.target.value, 10))} step={5} type=\"range\" value={maxPrice} />\r\n            </Form>\r\n            <MenuCategories onChangeCategoryHandler={this.props.onChangeCategory} allCategories={categories} />\r\n          </Fragment>; \r\n    }\r\n}\r\n\r\nSidebar.propTypes = {\r\n  products: PropTypes.instanceOf(Array).isRequired,\r\n  onTextChange: PropTypes.func.isRequired,\r\n  onChangeCategory: PropTypes.func.isRequired,\r\n  maxPrice: PropTypes.number.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  products: state.prod.products,\r\n  maxPrice: state.filter.maxPrice\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onTextChange: value => dispatch(onTextChange(value)),\r\n  onChangeCategory: value => dispatch(onChangeCategory(value)),\r\n  onChangeFilterPrice : value => dispatch(onChangeFilterPrice(value))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sidebar)\r\n","export const onTextChange = value => (\r\n    {\r\n        type: 'ON_TEXT_CHANGE',\r\n        value\r\n    }\r\n)\r\nexport const onChangeCategory = value => (\r\n    {\r\n        type: 'ON_CHANGE_CATEGORY',\r\n        value\r\n    }\r\n)\r\nexport const onChangeFilterPrice = value => (\r\n    {\r\n        type: 'ON_CHANGE_FILTER_PRICE',\r\n        value\r\n    }\r\n)\r\n\r\nexport const addQuantity = quantity => ({\r\n  type: 'ADD_QUANTITY',\r\n  quantity\r\n})\r\n\r\nexport const removeQuantity = quantity => ({\r\n  type: 'REMOVE_QUANTITY',\r\n  quantity\r\n})\r\n\r\nexport const updateQuantity = (update, quantity) => dispatch => {\r\n  if (update === 'add') {\r\n    dispatch(addQuantity(quantity))\r\n  } else if (update === 'remove') {\r\n    dispatch(removeQuantity(quantity))\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Grid } from 'semantic-ui-react'\r\n\r\nimport ProductsList from './../containers/ProductsList/ProductsList'\r\nimport Sidebar from './../containers/Sidebar/Sidebar'\r\n\r\n class Layout extends Component {\r\n    state = {}\r\n    render () {\r\n        return <Grid container stackable columns={2}>\r\n              <Grid.Row centered>\r\n                <Grid.Column mobile={16} tablet={6} computer={3}>\r\n                  <Sidebar />\r\n                </Grid.Column>\r\n                <Grid.Column mobile={16} tablet={10} computer={13}>\r\n                  <ProductsList />\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n    }\r\n}\r\n\r\nexport default Layout\r\n","import React from 'react'\r\nimport './Spinner.css'\r\n\r\nconst spinner = () => {\r\n   return <div className=\"sk-fading-circle\">\r\n       <div className=\"sk-circle1 sk-circle\" />\r\n       <div className=\"sk-circle2 sk-circle\" />\r\n       <div className=\"sk-circle3 sk-circle\" />\r\n       <div className=\"sk-circle4 sk-circle\" />\r\n       <div className=\"sk-circle5 sk-circle\" />\r\n       <div className=\"sk-circle6 sk-circle\" />\r\n       <div className=\"sk-circle7 sk-circle\" />\r\n       <div className=\"sk-circle8 sk-circle\" />\r\n       <div className=\"sk-circle9 sk-circle\" />\r\n       <div className=\"sk-circle10 sk-circle\" />\r\n       <div className=\"sk-circle11 sk-circle\" />\r\n       <div className=\"sk-circle12 sk-circle\" />\r\n     </div>\r\n}\r\n\r\nexport default spinner\r\n","import React from 'react'\r\n\r\nimport { Button, Icon, Modal, Header } from 'semantic-ui-react'\r\n\r\nconst modal = props => (\r\n        <Modal\r\n            trigger={<Button animated='vertical' color='yellow'>\r\n              <Button.Content hidden>Cart</Button.Content>\r\n                <Button.Content visible>\r\n                  <Icon name='shop' />\r\n                </Button.Content>\r\n            </Button>}\r\n            header={\r\n            <Header icon='cart' content={\r\n            <Header as='h2'>\r\n               <Header.Content>\r\n                {props.title}\r\n               </Header.Content>\r\n            </Header> } />\r\n            }\r\n            content={props.children}\r\n            actions={[\r\n            'Cancel',\r\n            { key: 'done', content: 'Purchase', positive: true }\r\n            ]}\r\n        />\r\n    )\r\n\r\nexport default modal\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  updateProductAlreadyInCart,\r\n  updateQuantity\r\n} from './../../store/actions/index'\r\n\r\nclass Select extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      currentProduct: null,\r\n      selectQuantities: 0\r\n    }\r\n\r\n    this.computedPrice = this.computedPrice.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n  componentDidMount () {\r\n    const currentProduct = this.props.products.find(\r\n      currProduct => currProduct.id === this.props.productId\r\n    )\r\n    this.setState({\r\n      currentProduct,\r\n      selectQuantities:\r\n        this.props.quantitiesWanted\r\n    })\r\n  }\r\n\r\n  handleChange = e => {\r\n    const value = parseInt(e.target.value, 10)\r\n    this.setState({\r\n      selectQuantities: value\r\n    })\r\n\r\n    this.props.onUpdateProductAlreadyInCart({\r\n      id: this.props.productId,\r\n      quantityWanted: value,\r\n      totalPrice: this.computedPrice(\r\n        this.state.currentProduct.price,\r\n        value,\r\n        this.props.totalPrice\r\n      )\r\n    })\r\n    this.props.onUpdateQuantity(this.props.productId, 'remove', this.props.quantitiesWanted - value)\r\n  }\r\n\r\n  computedPrice = (price, quantityWanted, totalPrice) => {\r\n    let result = 0\r\n    if (quantityWanted === 1) {\r\n      result = totalPrice - price\r\n    } else {\r\n      result = price * quantityWanted\r\n    }\r\n    return parseInt(result, 10)\r\n  }\r\n\r\n  render () {\r\n    const array = []\r\n    const quantities = this.props.quantitiesWanted\r\n    for (let i = 0; i < quantities; i++) {\r\n      array.push(i + 1)\r\n    }\r\n    return (\r\n      <select\r\n        name=\"selectQuantities\"\r\n        value={this.state.selectQuantities}\r\n        onChange={this.handleChange}\r\n      >\r\n        {array.map(elem => (\r\n          <option key={elem}>\r\n            {elem}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  products: state.prod.products\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onUpdateProductAlreadyInCart: (obj) => dispatch(updateProductAlreadyInCart(obj)),\r\n  onUpdateQuantity: (id, update, quantity) => dispatch(updateQuantity(id, update, quantity))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Select)\r\n","import React, { PureComponent } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Header, Table, Button } from 'semantic-ui-react'\r\nimport PropTypes from 'prop-types'\r\nimport Select from './../../containers/Select/Select'\r\n\r\nimport {\r\n  deleteProductInCart,\r\n  updateQuantity\r\n} from './../../store/actions/index'\r\n\r\nclass Cart extends PureComponent {\r\n  updateCart (id, quantity) {\r\n    this.props.onDeleteProduct(id, quantity)\r\n    this.props.onUpdateQuantity(id, 'remove', quantity)\r\n  }\r\n  render () {\r\n    return (\r\n      <Table celled padded>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell textAlign=\"center\">Product name</Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"center\">Quantities</Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"center\">Total Price</Table.HeaderCell>\r\n            <Table.HeaderCell textAlign=\"center\">\r\n              Delete product\r\n            </Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        {this.props.productInCart.map(inCart => {\r\n          const array = []\r\n          for (let i = 0; i < inCart.quantityWanted; i++) {\r\n            array.push(i + 1)\r\n          }\r\n          return <Table.Body key={inCart.id}>\r\n                <Table.Row>\r\n                  <Table.Cell>\r\n                    <Header as=\"h2\" textAlign=\"center\">\r\n                      {inCart.name}\r\n                    </Header>\r\n                  </Table.Cell>\r\n                  <Table.Cell textAlign=\"center\">\r\n                    <Select quantitiesWanted={inCart.quantityWanted} productId={inCart.id} totalPrice={inCart.totalPrice} />\r\n                  </Table.Cell>\r\n                  <Table.Cell textAlign=\"center\">{inCart.totalPrice}</Table.Cell>\r\n                  <Table.Cell textAlign=\"center\">\r\n                    <Button\r\n                      negative\r\n                      icon=\"delete\"\r\n                      onClick={() =>\r\n                        this.updateCart(inCart.id, inCart.quantityWanted)\r\n                      }\r\n                    />\r\n                  </Table.Cell>\r\n                </Table.Row>\r\n              </Table.Body>\r\n            })\r\n        }\r\n      </Table>\r\n    )\r\n  }\r\n}\r\n\r\nCart.propTypes = {\r\n  productInCart: PropTypes.instanceOf(Array).isRequired,\r\n  onDeleteProduct: PropTypes.func.isRequired,\r\n  onUpdateQuantity: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  productInCart: state.cart.inCart\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteProduct: id => dispatch(deleteProductInCart(id)),\r\n  onUpdateQuantity: (id, update, quantity) => dispatch(updateQuantity(id, update, quantity))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart)\r\n","import React from 'react'\r\nimport { Menu } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport Modal from './../Modal/Modal'\r\nimport Cart from './../../containers/Cart/Cart'\r\n\r\nconst navbar = () => (\r\n  <Menu size=\"large\" inverted>\r\n    <Link to=\"/\">\r\n      <Menu.Item name=\"Ma Super Boutique\" />\r\n    </Link>\r\n    <Menu.Item position=\"right\">\r\n      <Modal title=\"Your current cart\" >\r\n        <Cart />\r\n      </Modal>\r\n    </Menu.Item>\r\n  </Menu>\r\n)\r\n\r\nexport default navbar\r\n","import React from 'react'\r\nimport { Breadcrumb } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst breadcrumb = props => (\r\n  <Breadcrumb>\r\n    <Breadcrumb.Section>\r\n      <Link to=\"/\">Boutique</Link>\r\n    </Breadcrumb.Section>\r\n    <Breadcrumb.Divider icon=\"right angle\" />\r\n    <Breadcrumb.Section active>{props.productName}</Breadcrumb.Section>\r\n  </Breadcrumb>\r\n)\r\n\r\nbreadcrumb.propTypes = {\r\n  productName: PropTypes.string.isRequired\r\n}\r\n\r\nexport default breadcrumb\r\n","import React, { Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Header,\r\n  Message,\r\n  Divider,\r\n  Rating\r\n} from 'semantic-ui-react'\r\n\r\nconst productDescription = props => (\r\n  <Fragment>\r\n    Price :\r\n    <Header as=\"h2\" color=\"red\">\r\n      <Header.Content>{props.product.price} $</Header.Content>\r\n    </Header>\r\n    <Rating icon=\"star\" rating={props.productRating} maxRating={5} disabled />\r\n    <br />\r\n    <Divider />\r\n    <p>\r\n      Description : Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n      Alias doloremque quibusdam, nam omnis labore ipsam accusamus maxime\r\n      expedita voluptatum beatae? Temporibus quasi cumque optio nisi autem\r\n      repellendus sapiente consequuntur voluptatem.\r\n    </p>\r\n    <Divider />\r\n    {props.product.quantity > 0 ? (\r\n      <Message positive>\r\n        <Message.Header>Ce produit est encore disponible</Message.Header>\r\n        <p>il reste exactement {props.product.quantity} produit(s) en stock</p>\r\n      </Message>\r\n    ) : (\r\n      <Message negative>\r\n        <Message.Header>\r\n          Désole, ce produit n'est plus disponible\r\n        </Message.Header>\r\n      </Message>\r\n    )}\r\n  </Fragment>\r\n)\r\n\r\nproductDescription.propTypes = {\r\n  product: PropTypes.instanceOf(Object).isRequired,\r\n  productRating: PropTypes.number.isRequired\r\n}\r\n\r\nexport default productDescription\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Comment, Form, Header, Rating } from 'semantic-ui-react'\r\nimport PropTypes from 'prop-types'\r\nimport moment from 'moment'\r\nimport { addReplyMessage, ratingProduct } from './../../store/actions/index'\r\n\r\nclass ReplyComments extends Component {\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      message: '',\r\n      rating: 0\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleRate = this.handleRate.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n  handleChange = e => this.setState({ message: e.target.value })\r\n  handleRate = (e, { rating }) => {\r\n    this.setState({ rating })\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    this.setState({ message: '', rating: 0 })\r\n    this.props.onAddReplyMessage(this.props.productId, moment().fromNow(), this.state.message, this.state.rating)\r\n    this.props.onRatingProduct(this.props.productId, this.state.rating)\r\n  }\r\n  render () {\r\n    return <Fragment>\r\n        <Comment.Group>\r\n          <Header as=\"h3\" dividing>\r\n            Comments\r\n          </Header>\r\n          {this.props.comments.map(comment => <Comment key={comment.id}>\r\n              <Comment.Content>\r\n                <Comment.Author as=\"a\">\r\n                  {comment.author}{' '}\r\n                  <Rating icon=\"star\" defaultRating={comment.commentRatingProduct} maxRating={5} disabled/>\r\n                </Comment.Author>\r\n                <Comment.Metadata>{comment.date}</Comment.Metadata>\r\n                <Comment.Text>{comment.message}</Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>)}\r\n          <Header as=\"h3\" dividing>\r\n            Share your experience\r\n          </Header>\r\n          <Rating icon=\"star\" defaultRating={0} maxRating={5} onRate={this.handleRate} />\r\n          <Form reply onSubmit={this.handleSubmit}>\r\n            <Form.TextArea onChange={this.handleChange} />\r\n            <Button content=\"Add Reply\" labelPosition=\"left\" icon=\"edit\" primary />\r\n          </Form>\r\n        </Comment.Group>\r\n      </Fragment>\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAddReplyMessage: (id, date, message, rating) => dispatch(addReplyMessage(id, date, message, rating)),\r\n  onRatingProduct: (id, rating) => dispatch(ratingProduct(id, rating))\r\n})\r\n\r\nReplyComments.propTypes = {\r\n  comments: PropTypes.instanceOf(Array).isRequired,\r\n  onAddReplyMessage: PropTypes.func.isRequired,\r\n  onRatingProduct: PropTypes.func.isRequired,\r\n  productId: PropTypes.number.isRequired\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ReplyComments)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Grid, Segment, Image, Button, Form, Message } from 'semantic-ui-react'\r\n\r\nimport {\r\n  addToCart,\r\n  updateQuantity,\r\n  updateProductAlreadyInCart\r\n} from './../../store/actions/index'\r\n\r\nimport Breadcrumb from './../../components/Breadcrumb/Breadcrumb'\r\nimport ProductDescription from './../../components/ProductDescription/ProductDescription'\r\nimport ReplyComments from './../ReplyComments/ReplyComments'\r\n\r\nclass ProductPage extends Component {\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      selectQuantity: 0,\r\n      message: ''\r\n    }\r\n  }\r\n\r\n  handleChange = (e, { name, value }) => this.setState({ [name]: value })\r\n\r\n  computedPrice (quantityWanted) {\r\n    /* Calculé le prix en fonctionne de la quantité\r\n        Ex : Prix produit = 5€ quantité demandé 2\r\n        prix total : 2*5\r\n    */\r\n    const result = this.props.product.price * quantityWanted\r\n    return parseInt(result, 10)\r\n  }\r\n\r\n  handleClick = (id) => {\r\n    const quantityWanted = parseInt(this.state.selectQuantity, 10)\r\n    if (quantityWanted <= 0 || quantityWanted === null) {\r\n      return this.setState({ message: 'Veuillez choisir une quantité valide' })\r\n    }\r\n\r\n    if (quantityWanted > this.props.product.quantity) {\r\n      return this.setState({ message: `Ce produit ne possède plus assez de stock (stock actuel : ${this.props.product.quantity})` })\r\n    }\r\n    this.setState({ message: '', selectQuantity: 0 })\r\n\r\n    let productAlreadyInCart = this.props.productInCart.find(prod => prod.id === id)\r\n\r\n    if (productAlreadyInCart) {\r\n      productAlreadyInCart = {\r\n        id: this.props.product.id,\r\n        quantityWanted: productAlreadyInCart.quantityWanted + quantityWanted,\r\n        totalPrice: productAlreadyInCart.totalPrice + this.computedPrice(quantityWanted)\r\n      }\r\n\r\n      this.props.onUpdateProductAlreadyInCart(productAlreadyInCart)\r\n    } else {\r\n      const totalPrice = this.computedPrice(quantityWanted)\r\n      const productInCart = {\r\n        id: this.props.product.id,\r\n        name: this.props.product.name,\r\n        quantityWanted,\r\n        totalPrice\r\n    }\r\n      this.props.addToCart(productInCart)\r\n    }\r\n    this.props.updateQuantity(this.props.product.id, 'add', quantityWanted)\r\n    return true\r\n  }\r\n\r\n  render () {\r\n    return <Grid container stackable columns=\"equal\">\r\n        <Segment style={{ width: '100%' }} textAlign=\"center\">\r\n          <h1>{this.props.product.name}</h1>\r\n        </Segment>\r\n        <Breadcrumb productName={this.props.product.name} />\r\n        <Grid.Row centered>\r\n          <Grid.Column>\r\n            <Image src={this.props.product.path} size=\"big\" />\r\n          </Grid.Column>\r\n          <Grid.Column>\r\n            <ProductDescription product={this.props.product} productRating={this.props.product.rating} />\r\n            {this.state.message ? <Message warning>\r\n                <Message.Header>{this.state.message}</Message.Header>\r\n              </Message> : null}\r\n            <Form>\r\n              <Form.Input name=\"selectQuantity\" type=\"number\" value={this.state.selectQuantity} onChange={this.handleChange} />\r\n            </Form>\r\n            {this.props.product.quantity !== 0\r\n              ? <Button basic color=\"green\" onClick={() => this.handleClick(this.props.product.id)}>\r\n                  Ajouter au panier\r\n                </Button>\r\n              : <Button disabled basic color=\"red\">\r\n                  Article epuisé\r\n                </Button>}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <ReplyComments productId={this.props.product.id} comments={this.props.product.comments} />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n  }\r\n}\r\n\r\nProductPage.propTypes = {\r\n  product: PropTypes.instanceOf(Object).isRequired,\r\n  productInCart: PropTypes.instanceOf(Object).isRequired,\r\n  addToCart: PropTypes.func.isRequired,\r\n  onUpdateProductAlreadyInCart: PropTypes.func.isRequired,\r\n  updateQuantity: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  productInCart: state.cart.inCart\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addToCart: product => dispatch(addToCart(product)),\r\n  onUpdateProductAlreadyInCart: product => dispatch(updateProductAlreadyInCart(product)),\r\n  updateQuantity: (id, update, quantity) => dispatch(updateQuantity(id, update, quantity))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductPage)\r\n","import React, { Component } from 'react'\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport PropTypes from 'prop-types'\n\nimport { initData } from './store/actions/index'\n\nimport Layout from './hoc/Layout'\nimport Spinner from './components/Spinner/Spinner'\nimport Navbar from './components/Navbar/Navbar'\nimport ProductPage from './containers/ProductPage/ProductPage'\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.fetchData()\n  }\n  render () {\n    if (this.props.isLoading) {\n      return <Spinner />\n    }\n    if (this.props.error) {\n      return <div>Un erreur est survenu : {this.props.error.message} </div>\n    }\n    return <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route path=\"/produit/:id\" render={props => {\n              const productId = parseInt(props.match.params.id, 10)\n              const product = this.props.products.find(el => el.id === productId)\n              return product ? <ProductPage product={product} /> : <Redirect to=\"/\" />\n            }} />\n          <Route exact path=\"/\" component={Layout} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n  }\n}\n\nApp.propTypes = {\n  products: PropTypes.instanceOf(Object).isRequired,\n  fetchData: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  products: state.prod.products,\n  isLoading: state.prod.loading,\n  error: state.prod.error\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchData: () => dispatch(initData())\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\n\r\nimport 'semantic-ui-css/semantic.min.css'\r\n\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport ProductsReducer from './store/reducers/productsReducer'\r\nimport FiltersReducer from './store/reducers/filtersReducer'\r\nimport CartReducer from './store/reducers/cartReducer'\r\n\r\nimport App from './App'\r\n\r\nconst combineAllReducers = combineReducers({\r\n  prod: ProductsReducer,\r\n  filter: FiltersReducer,\r\n  cart: CartReducer\r\n})\r\n\r\nconst store = createStore(combineAllReducers, applyMiddleware(thunk))\r\n\r\nconst root = (\r\n        <Provider store={store} >\r\n            <BrowserRouter>\r\n                <App />\r\n            </BrowserRouter>\r\n        </Provider>\r\n)\r\n\r\nReactDOM.render(root, document.getElementById('root'))\r\n"],"sourceRoot":""}